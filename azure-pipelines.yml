trigger:
 branches:
   include:
     - develop

variables:
  Parameters.solution: '**/Website/SourceCode/Profiles/Profiles.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  Parameters.Websitename: 'ProfilesRNS'
  Parameters.Artifactname: 'ProfilesRNS_Drop'
  Parameters.Contents: '**/Website/SourceCode/Profiles/Profiles/web.**.config'
  Parameters.packagetype: '*.zip'
  Parameters.VirtualApplication: 'Profiles'
  Parameters.WebsitePhysicalPath: 'E:\WebContent\ProfilesRNS_Dev'
  Parameters.msbuildArgs: '/t:rebuild /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:PackageLocation="$(Build.ArtifactStagingDirectory)\build"'


stages:
- stage: Build_Application
  jobs:
  - job: Build
    pool:
      name: Azure Pipelines
      vmImage: windows-latest
      demands:
      - msbuild
      - visualstudio
      - vstest
    steps:

    - task: NuGetToolInstaller@0
      displayName: Use NuGet 6.6.1
      inputs:
        versionSpec: 6.6.1

    - task: NuGetCommand@2
      displayName: NuGet restore
      inputs:
        command: 'restore'
        restoreSolution: '$(Parameters.solution)'
        feedsToUse: 'config'

    - task: VSBuild@1
      displayName: Build solution
      inputs:
        solution: $(Parameters.solution)
        platform: $(BuildPlatform)
        configuration: $(BuildConfiguration)
        msbuildArgs: $(Parameters.msbuildArgs)

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)/build/TransformConfig'
      inputs:
        SourceFolder: $(Build.Repository.LocalPath)
        TargetFolder: $(Build.ArtifactStagingDirectory)/build/TransformConfig
        Contents: $(Parameters.Contents)
        flattenFolders: true

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      inputs:
        PathtoPublish: $(build.artifactstagingdirectory)/build/Profiles.zip
        ArtifactName: $(Parameters.ArtifactName)
      condition: succeededOrFailed()

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      inputs:
        PathtoPublish: $(build.artifactstagingdirectory)/build/TransformConfig
        ArtifactName: $(Parameters.ArtifactName)
      condition: succeededOrFailed()

- stage: Development_Deploy
  jobs:
    - deployment: DeployProfiles_Dev
      displayName: DeployProfiles_Dev
      continueOnError: true 
      timeoutInMinutes: 10 
      variables:
        GoogleMapsKey: "$(GoogleMapskey_Value)"
        ProfilesDB: "$(ProfilesDB_Dev)"

      environment: 
        name: Development
        resourceType: VirtualMachine
        tags: Profiles_Dev_Azure 
        # Tags needs to be updated per Pipeline
      strategy: 
        runOnce:
          deploy:
            steps:

             - task: IISWebAppManagementOnMachineGroup@0
               displayName: 'Stop Profiles AppPool'
               inputs:
                 IISDeploymentType: 'IISApplicationPool'
                 ActionIISApplicationPool: 'StopAppPool'
                 StartStopRecycleAppPoolName: 'ProfilesRNS_Dev'

             - task: IISWebAppDeploymentOnMachineGroup@0
               displayName: 'IIS Web site Deploy'
               inputs:
                 WebSiteName: '$(Parameters.Websitename)'
                 Package: '$(Build.ArtifactStagingDirectory)/../$(Parameters.ArtifactName)/$(Parameters.packagetype)'
                 RemoveAdditionalFilesFlag: true
                 XmlVariableSubstitution: true

             - task: CopyFiles@1
               inputs:
                SourceFolder: '$(Build.ArtifactStagingDirectory)/../$(Parameters.ArtifactName)'
                Contents: 'web.dev.config'
                TargetFolder: '$(Parameters.WebsitePhysicalPath)'

             - task: AzureKeyVault@1
               inputs:
                 azureSubscription: 'Azure-Production' # Replace with your service connection
                 KeyVaultName: 'umwazkvprofilesshared'
                 SecretsFilter: 'ORCIDClientID, ORCIDClientSecret, GoogleMapsKey'
                 RunAsPreJob: false

             - powershell: |
                $configFile = "$(Parameters.WebsitePhysicalPath)\web.dev.config" 
                (Get-Content $configFile) -replace '__ORCIDClientID__', "$(ORCIDClientID)" | Set-Content $configFile
                (Get-Content $configFile) -replace '__ORCIDClientSecret__', "$(ORCIDClientSecret)" | Set-Content $configFile
                (Get-Content $configFile) -replace '__GoogleMapsKey__', "$(GoogleMapsKey)" | Set-Content $configFile
               displayName: 'Replace Tokens in web.config'

             - task: FileTransform@1
               inputs:
                folderPath: '$(Parameters.WebsitePhysicalPath)'
                #FolderPath is pipeline specific
                enableXmlTransform: true
                xmlTransformationRules: '-transform web.dev.config -xml web.config'

             - task: IISWebAppManagementOnMachineGroup@0
               displayName: 'Start Profiles AppPool'
               inputs:
                IISDeploymentType: 'IISApplicationPool'
                ActionIISApplicationPool: 'StartAppPool'
                StartStopRecycleAppPoolName: 'ProfilesRNS_Dev'

             - task: DeleteFiles@1
               inputs:
                SourceFolder: '$(Build.ArtifactStagingDirectory)/../$(Parameters.ArtifactName)'
                Contents: $(Parameters.packagetype)

